setup apollo server Project
1. npm init -y
2. npm i @apollo/server express graphql cors body-parser //(connecting frontend with server cors is required)
// cors= cross origin resourse sharing
3. npm i express-jwt jsonwebtoken (for login signup) 
4. setup server.js
5. setup schema by adding resolvers.js and schema.graphql


Couse plan:
----------
  Connecting to REST API [Done]
  Connecting to database (Mongodb)-
  ------
    MongoDB 
      Driver + ORM
        Mongoose
      database model

  Documentation [Done]
  Mutaion [Done]

  Aliases-- [Done]
  query Query {
    greet: hello
  }

  {
    "data": {
      "greet": "Hello World"
    }
  }
  data stored in hello will be come for greet
  Debugging- Server Apps
  Fragments (TODO:)

  Authentication
  connecting to reqses.in
  Handling Errors


  Client Projects- React Project
  Connecting to graphql server and getting the database
  Authentication


  caching

  Pagination [6-SEPT]-
  Pagination
=======
  Types 

  1. Offset Pagination
      Disadv 
      ---
        after first set of result is loaded if new item is added in db, 
        offset will show previous displayed result also 


  2. Cursor Pagination (Recommended)
      Cursor pagination is a common technique to paginate data in GraphQL APIs.
      It involves using a "cursor" value to indicate the position in the dataset, 
      which the client can pass to the server to fetch the next page of results.
      TODO: learn about node adjust


  TODO: learn WebSocket, SocketIO also WebRTC and Subscription by your own
  Subscription
  Publisher
  =>1
    =>2
      =>10
  Subscriber
  =>1
    =>2
      =>10

  1. Simplex 
  example: Radio
  sender => receiver  

2. Half Duplex 
    example: Walkie Talkie, Http 
    sender ==> receiver 
    sender <== receiver 

    sender ==> receiver 
    sender <== receiver 

3. Full Duplex 
    examples: Telephone, WebSocket
    sender <=> receiver


  ---
  Typescript based Project

TODO: learn about union and interfaces
1. caching, authentication & autherization
2. learn about jenkins, docker, aws for hosting apps
3. testing graphql api with Jest and other tools
Prereq. Testing react apps using jest or testing NODEJs apps using JEST or Mocha/Chai